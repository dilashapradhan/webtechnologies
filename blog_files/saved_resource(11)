/*
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

*/

var media = wp.media;

// VIEW: MEDIA ITEM:

media.view.MEXPItem = wp.Backbone.View.extend({

    tagName   : 'li',
    className : 'mexp-item attachment',

    render: function() {

    	this.template = media.template( 'mexp-' + this.options.service.id + '-item-' + this.options.tab );
       	this.$el.html( this.template( this.model.toJSON() ) );

        return this;

    }

});

// VIEW - BOTTOM TOOLBAR

media.view.Toolbar.MEXP = media.view.Toolbar.extend({

	initialize: function() {

		var serviceName = this.controller.state().id.replace( /mexp-service-/g, '');

		_.defaults( this.options, {
		    event : 'inserter',
		    close : false,
			items : {
			    // See wp.media.view.Button
			    inserter     : {
			        id       : 'mexp-button',
			        style    : 'primary',
			        text     : ( 'undefined' != typeof( mexp.services[serviceName].labels.insert ) && mexp.services[serviceName].labels.insert ) ? mexp.services[serviceName].labels.insert : mexp.labels.insert,
			        priority : 80,
			        click    : function() {
						if ( this.controller.state().props && this.controller.state().props.at(0).get( 'sideload' ) )
							this.controller.state().mexpSideload();
						else
							this.controller.state().mexpInsert();
					}
			    }
			}
		});

		media.view.Toolbar.prototype.initialize.apply( this, arguments );

		this.set( 'pagination', new media.view.Button({
			tagName: 'a',
			classes: 'mexp-pagination button button-secondary',
			id: serviceName + '-loadmore',
			text: mexp.labels.loadmore,
			priority: -20
		}) );
	},

	refresh: function() {

		var selection = this.controller.state().props.get( '_all' ).get( 'selection' );

		// @TODO i think this is redundant
		this.get( 'inserter' ).model.set( 'disabled', !selection.length );

		media.view.Toolbar.prototype.refresh.apply( this, arguments );

	}

});

// VIEW - MEDIA CONTENT AREA

media.view.MEXP = media.View.extend({

	events: {
		'click .mexp-item-area'     : 'toggleSelectionHandler',
		'click .mexp-item .check'   : 'removeSelectionHandler',
		'submit .mexp-toolbar form' : 'updateInput'
	},

	initialize: function() {

		/* fired when you switch router tabs */
		
		var _this = this;

		this.collection = new Backbone.Collection();
		this.service    = this.options.service;
		this.tab        = this.options.tab;

		this.createToolbar();
		this.clearItems();

		if ( this.model.get( 'items' ) && this.model.get( 'alwaysRefresh' ) ) {
			this.model.set( 'items', [] );
			this.model.set( 'cursor', null );
			this.collection = new Backbone.Collection();
			this.collection.once( 'reset', this.render, this );
			this.collection.reset();
			this.model.set( 'fetchOnRender', false );
			this.loading();
			this.fetchItems();

			jQuery( '#' + this.service.id + '-loadmore' ).attr( 'disabled', false ).show();
		} else if ( this.model.get( 'items' ) ) {

			this.collection = new Backbone.Collection();
			this.collection.reset( this.model.get( 'items' ) );

			jQuery( '#' + this.service.id + '-loadmore' ).attr( 'disabled', false ).show();
		} else {
			jQuery( '#' + this.service.id + '-loadmore' ).hide();
		}

		// @TODO do this somewhere else:
		// @TODO this gets reverted anyway when the button model's disabled state changes. look into it.
		//jQuery( '#mexp-button' ).text( this.service.labels.insert );

		this.collection.on( 'reset', this.render, this );

		this.model.on( 'change:params', this.changedParams, this );

		this.on( 'loading',       this.loading, this );
		this.on( 'loaded',        this.loaded, this );
		this.on( 'change:params', this.changedParams, this );
		this.on( 'change:page',   this.changedPage, this );

		jQuery( '.mexp-pagination' ).click( function( event ) {
			_this.paginate( event );
		} );

		if ( _this.model.get( 'fetchOnRender' ) ) {
			_this.model.set( 'fetchOnRender', false );
			_this.loading();
			_this.fetchItems();
		}

	},

	render: function() {

		/* fired when you switch router tabs */

		var selection = this.getSelection();

		if ( this.collection && this.collection.models.length ) {

			this.clearItems();

			var container = document.createDocumentFragment();

			this.collection.each( function( model ) {
				container.appendChild( this.renderItem( model ) );
			}, this );

			this.$el.find( '.mexp-items' ).append( container );

		}

		selection.each( function( model ) {
			var id = '#mexp-item-' + this.service.id + '-' + this.tab + '-' + model.get( 'id' );
			this.$el.find( id ).closest( '.mexp-item' ).addClass( 'selected details' );
		}, this );

		jQuery( '#mexp-button' ).prop( 'disabled', !selection.length );

		return this;

	},

	renderItem : function( model ) {

		var view = new media.view.MEXPItem({
			model   : model,
			service : this.service,
			tab     : this.tab
		});

		return view.render().el;

	},

	createToolbar: function() {

		// @TODO this could be a separate view:
		html = '<div class="mexp-error attachments"></div>';
		this.$el.prepend( html );

		// @TODO this could be a separate view:
		html = '<div class="mexp-empty attachments"></div>';
		this.$el.prepend( html );

		// @TODO this could be a separate view:
		html = '<ul class="mexp-items attachments clearfix"></ul>';
		this.$el.append( html );

		// @TODO this could be a separate view:
		var toolbar_template = media.template( 'mexp-' + this.service.id + '-search-' + this.tab );
		var toolbar_html = toolbar_template( this.model.toJSON() );
		// Only append the toolbar if the toolbar has content.
		if ( toolbar_html.replace( /^\s+$/, '').length )
			this.$el.prepend( '<div class="mexp-toolbar media-toolbar clearfix">' + toolbar_html + '</div>' );

	},

	removeSelectionHandler: function( event ) {

		var target = jQuery( '#' + event.currentTarget.id );
		var id     = target.attr( 'data-id' );

		this.removeFromSelection( target, id );

		event.preventDefault();

	},

	toggleSelectionHandler: function( event ) {

		if ( event.target.href )
			return;

		var target = jQuery( '#' + event.currentTarget.id );
		var id     = target.attr( 'data-id' );

		if ( this.getSelection().get( id ) )
			this.removeFromSelection( target, id );
		else
			this.addToSelection( target, id );

	},

	addToSelection: function( target, id ) {

		target.closest( '.mexp-item' ).addClass( 'selected details' );

		this.getSelection().add( this.collection._byId[id] );

		// @TODO why isn't this triggered by the above line?
		this.controller.state().props.trigger( 'change:selection' );

	},

	removeFromSelection: function( target, id ) {

		target.closest( '.mexp-item' ).removeClass( 'selected details' );

		this.getSelection().remove( this.collection._byId[id] );

		// @TODO why isn't this triggered by the above line?
		this.controller.state().props.trigger( 'change:selection' );

	},

	clearSelection: function() {
		this.getSelection().reset();
	},

	getSelection : function() {
		return this.controller.state().props.get( '_all' ).get( 'selection' );
	},

	clearItems: function() {

		this.$el.find( '.mexp-item' ).removeClass( 'selected details' );
		this.$el.find( '.mexp-items' ).empty();
		this.$el.find( '.mexp-pagination' ).hide();

	},

	loading: function() {

		// show spinner
		this.$el.find( '.mexp-loading' ).show();

		// hide messages
		this.$el.find( '.mexp-error' ).hide().text('');
		this.$el.find( '.mexp-empty' ).hide().text('');

		// disable 'load more' button
		jQuery( '#' + this.service.id + '-loadmore' ).attr( 'disabled', true );
	},

	loaded: function( response ) {

		// hide spinner
		this.$el.find( '.mexp-loading' ).hide();

		// disable 'load more' button
		if ( this.model.get( 'max_id' ) == 0 )
			jQuery( '#' + this.service.id + '-loadmore' ).hide();
		else
			jQuery( '#' + this.service.id + '-loadmore' ).show();

	},

	fetchItems: function() {

		this.trigger( 'loading' );

		var data = {
			_nonce  : mexp._nonce,
			service : this.service.id,
			tab     : this.tab,
			params  : this.model.get( 'params' ),
			page    : this.model.get( 'page' ),
			max_id  : this.model.get( 'max_id' ),
			cursor  : this.model.get( 'cursor' )
		};

		media.ajax( 'mexp_request', {
			context : this,
			success : this.fetchedSuccess,
			error   : this.fetchedError,
			data    : data
		} );

	},

	fetchedSuccess: function( response ) {

		if ( !this.model.get( 'page' ) ) {

			if ( !response.items ) {
				this.fetchedEmpty( response );
				return;
			}

			this.model.set( 'min_id', response.meta.min_id );
			this.model.set( 'items',  response.items );

			this.collection.reset( response.items );
		} else {

			if ( !response.items ) {
				this.fetchedEmpty( response );
				return;
			}

			this.model.set( 'items', this.model.get( 'items' ).concat( response.items ) );

			var collection = new Backbone.Collection( response.items );
			var container  = document.createDocumentFragment();

			this.collection.add( collection.models );

			collection.each( function( model ) {
				container.appendChild( this.renderItem( model ) );
			}, this );

			this.$el.find( '.mexp-items' ).append( container );

		}

		jQuery( '#' + this.service.id + '-loadmore' ).attr( 'disabled', false ).show();
		this.model.set( 'max_id', response.meta.max_id );

		if ( response.meta.cursor )
			this.model.set( 'cursor', response.meta.cursor );

		this.trigger( 'loaded loaded:success', response );

	},

	fetchedEmpty: function( response ) {

		this.$el.find( '.mexp-empty' ).text( this.service.labels.noresults ).show();
		this.$el.find( '.mexp-pagination' ).hide();

		this.trigger( 'loaded loaded:noresults', response );

	},

	fetchedError: function( response ) {

		this.$el.find( '.mexp-error' ).text( response.error_message ).show();
		jQuery( '#' + this.service.id + '-loadmore' ).attr( 'disabled', false ).show();
		this.trigger( 'loaded loaded:error', response );

	},

	updateInput: function( event ) {

		// triggered when a search is submitted

		var params = this.model.get( 'params' );
		var els = this.$el.find( '.mexp-toolbar' ).find( ':input' ).each( function( k, el ) {
			var n = jQuery(this).attr('name');
			if ( n )
				params[n] = jQuery(this).val();
		} );
		
		this.clearSelection();
		jQuery( '#mexp-button' ).attr( 'disabled', 'disabled' );
		this.model.set( 'params', params );
		this.trigger( 'change:params' ); // why isn't this triggering automatically? might be because params is an object

		event.preventDefault();

	},

	paginate : function( event ) {

		if( 0 == this.collection.length )
			return;

		var page = this.model.get( 'page' ) || 1;

		this.model.set( 'page', page + 1 );
		this.trigger( 'change:page' );

		event.preventDefault();

	},

	changedPage: function() {

		// triggered when the pagination is changed

		this.fetchItems();

	},

	changedParams: function() {

		// triggered when the search parameters are changed

		this.model.set( 'page',   null );
		this.model.set( 'min_id', null );
		this.model.set( 'max_id', null );
		this.model.set( 'cursor', null );

		this.clearItems();
		this.fetchItems();

	}

});

// VIEW - MEDIA FRAME (MENU BAR)	

var post_frame = media.view.MediaFrame.Post;

media.view.MediaFrame.Post = post_frame.extend({

	initialize: function() {

		post_frame.prototype.initialize.apply( this, arguments );

		_.each( mexp.services, function( service, service_id ) {

			var id = 'mexp-service-' + service.id;
			var controller = {
				id      : id,
				router  : id + '-router',
				toolbar : id + '-toolbar',
				menu    : 'default',
				title   : service.labels.title,
				tabs    : service.tabs,
				priority: 100 // places it above Insert From URL
			};

			for ( var tab in service.tabs ) {

				// Content
				this.on( 'content:render:' + id + '-content-' + tab, _.bind( this.mexpContentRender, this, service, tab ) );

				// Set the default tab
				if ( service.tabs[tab].defaultTab )
					controller.content = id + '-content-' + tab;

			}

			this.states.add([
				new media.controller.MEXP( controller )
			]);

			// Tabs
			this.on( 'router:create:' + id + '-router', this.createRouter, this );
			this.on( 'router:render:' + id + '-router', _.bind( this.mexpRouterRender, this, service ) );

			// Toolbar
			this.on( 'toolbar:create:' + id + '-toolbar', this.mexpToolbarCreate, this );
			//this.on( 'toolbar:render:' + id + '-toolbar', _.bind( this.mexpToolbarRender, this, service ) );

		}, this );

	},

	mexpRouterRender : function( service, view ) {

		var id   = 'mexp-service-' + service.id;
		var tabs = {};

		for ( var tab in service.tabs ) {
			tab_id = id + '-content-' + tab;
			tabs[tab_id] = {
				text : service.tabs[tab].text
			};
		}

		view.set( tabs );

	},

	mexpToolbarRender : function( service, view ) {

		view.set( 'selection', new media.view.Selection.MEXP({
			service    : service,
			controller : this,
			collection : this.state().props.get('_all').get('selection'),
			priority   : -40
		}).render() );

	},

	mexpContentRender : function( service, tab ) {

		/* called when a tab becomes active */

		this.content.set( new media.view.MEXP( {
			service    : service,
			controller : this,
			model      : this.state().props.get( tab ),
			tab        : tab,
			className  : 'clearfix attachments-browser mexp-content mexp-content-' + service.id + ' mexp-content-' + service.id + '-' + tab
		} ) );

	},

	mexpToolbarCreate : function( toolbar ) {

		toolbar.view = new media.view.Toolbar.MEXP( {
			controller : this
		} );

	}

});

// CONTROLLER:

media.controller.MEXP = media.controller.State.extend({

	initialize: function( options ) {

		this.props = new Backbone.Collection();

		for ( var tab in options.tabs ) {

			this.props.add( new Backbone.Model({
				id     : tab,
				params : {},
				page   : null,
				min_id : null,
				max_id : null,
				cursor : null,
				fetchOnRender : options.tabs[ tab ].fetchOnRender,
				alwaysRefresh : options.tabs[ tab ].alwaysRefresh,
				sideload : options.tabs[ tab ].sideload
			}) );

		}

		this.props.add( new Backbone.Model({
			id        : '_all',
			selection : new Backbone.Collection()
		}) );

		this.props.on( 'change:selection', this.refresh, this );

	},

	refresh: function() {
		this.frame.toolbar.get().refresh();
	},

	mexpInsert: function() {

		var selection = this.frame.content.get().getSelection(),
		urls          = [];

		selection.each( function( model ) {
			urls.push( model.get( 'url' ) );
		}, this );

		if ( typeof(tinymce) === 'undefined' || tinymce.activeEditor === null || tinymce.activeEditor.isHidden() ) {
			media.editor.insert( _.toArray( urls ).join( "\n\n" ) );
		} else {
			media.editor.insert( "<p>" + _.toArray( urls ).join( "</p><p>" ) + "</p>" );
		}

		selection.reset();
		this.frame.close();

	},

	mexpSideload : function() {

		var selection = this.frame.content.get().getSelection(),
			serviceName = this.attributes.id.replace( /mexp-service-/g, '' ),
			nonce = jQuery( '#' + serviceName + '_verify' ).val(),
			self = this;

		this.frame.setState( 'insert' );
		selection.each( function( model ) {
			var filename = model.get( 'content' ),
				new_selection = this.frame.state().get( 'selection' ),
				file = {},
				attributes = {
					file: file,
					uploading: true,
					date: new Date(),
					filename: filename,
					menuOrder: 0,
					uploadedTo: wp.media.model.settings.post.id,
					type : 'image',
					subtype : 'jpg',
					loaded : 0,
					size : 100,
					percent : 40
				};

			file.attachment = wp.media.model.Attachment.create( attributes );
			wp.Uploader.queue.add( file.attachment );
			new_selection.add( file.attachment ? [ file.attachment ] : [] );

			jQuery.post( ajaxurl, {
				action: serviceName + '_sideload',
				nonce: nonce,
				url: filename
			} ).done( function( r ){
				self.frame.uploader.uploader.uploader.trigger( 'FileUploaded', file, {
					response : r,
					status : 200
				});
			});
		}, this );
		selection.reset();
	}

});
;
/*
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

*/

var mexp_twitter_location_js_loaded = false;
var mexp_twitter_location_map       = null;
var mexp_twitter_location_marker    = null;
var mexp_twitter_location_timeout   = null;
var pf = wp.media.view.MediaFrame.Post;

wp.media.view.MediaFrame.Post = pf.extend({

	initialize: function() {

		pf.prototype.initialize.apply( this, arguments );

		this.on( 'content:render:mexp-service-twitter-content-location', _.bind( function() {

			this.state().frame.content.get().on( 'loaded', function( response ) {

				if ( ! response || ! response.meta || ! response.meta.coords )
					return;

				var ll = new google.maps.LatLng( response.meta.coords.lat, response.meta.coords.lng );

				mexp_twitter_location_marker.setPosition( ll );
				mexp_twitter_location_map.panTo( ll );

			} );

			if ( !mexp_twitter_location_js_loaded ) {
				$('#mexp_twitter_map_canvas').css( 'background-image', 'url(' + mexp.admin_url + '/images/wpspin_light.gif)');
				if ( ! google.maps ) { // Google Maps is not loaded yet
                    var script = document.createElement("script");
                    script.type = "text/javascript";
                    script.src = mexp.services.twitter.labels.gmaps_url + '?key=' + mexp.services.twitter.labels.api_key + '&callback=mexp_twitter_location_initialize';
                    document.body.appendChild(script);
				} else {
                    mexp_twitter_location_initialize();
				}
			} else {
				mexp_twitter_location_initialize();
			}

		}, this ) );

	}

});

function mexp_twitter_location_initialize() {

	var callback = function() {
		mexp_twitter_location_fetch( mexp_twitter_location_load );
	};

	if ( navigator.geolocation ) {
		navigator.geolocation.getCurrentPosition( mexp_twitter_location_load, callback );
		mexp_twitter_location_timeout = window.setTimeout( callback, 8000 );
	} else {
		mexp_twitter_location_fetch( callback );
	}

	mexp_twitter_location_js_loaded = true;

}

function mexp_twitter_location_fetch( callback ) {

	callback( {
		coords : google.loader.ClientLocation
	} );

}

function mexp_twitter_location_load( position ) {

	var lat, lng;
	$ = jQuery;

	window.clearTimeout( mexp_twitter_location_timeout );

	// Enable the visual refresh
	google.maps.visualRefresh = true;

	var loc = $('#mexp-twitter-search-location-coords').val();

	if ( loc ) {
		ll = loc.split( ',' );
		lat = ll[0];
		lng = ll[1];
	} else if ( position.coords ) {
		lat = position.coords.latitude;
		lng = position.coords.longitude;
		$('#mexp-twitter-search-location-coords').val( lat + ',' + lng );
	}

	var radius = $('#mexp-twitter-search-location-radius').val();
	var mapOptions = {
		center            : new google.maps.LatLng( lat, lng ),
		zoom              : 10,
		mapTypeId         : google.maps.MapTypeId.ROADMAP,
		mapTypeControl    : false,
		streetViewControl : false
	};
	mexp_twitter_location_map = new google.maps.Map( document.getElementById( 'mexp_twitter_map_canvas' ), mapOptions );
	mexp_twitter_location_marker = new google.maps.Marker({
		position  : new google.maps.LatLng( lat, lng ),
		draggable : true,
		map       : mexp_twitter_location_map
	});
	var circle = new google.maps.Circle({
		map          : mexp_twitter_location_map,
		radius       : ( radius * 1000 ), // metres
		strokeWeight : 1,
		fillColor    : 'blue',
		fillOpacity  : 0.15,
		strokeColor  : '#fff'
	});
	circle.bindTo( 'center', mexp_twitter_location_marker, 'position' );

	$('#mexp-twitter-search-location-radius').on('change',function(){
		circle.setRadius( $(this).val() * 1000 );
	});
	$('#mexp-twitter-search-location-name').on('change',function(){
		$('#mexp-twitter-search-location-coords').val('');
	});

	google.maps.event.addListener(mexp_twitter_location_marker, 'dragend', function() {
		p = mexp_twitter_location_marker.getPosition();
		mexp_twitter_location_map.panTo( p );
		$('#mexp-twitter-search-location-coords').val( p.lat() + ',' + p.lng() ).closest('form').submit();
	});

}
;
/**
 * VideoPress admin media scripts
 */
(function($) {
	var VideoPressModalView = Backbone.View.extend({
		'className': 'videopress-modal-container',
		'template': wp.media.template( 'videopress-media-modal' ),

		// Render the VideoPress modal with a video object by guid.
		render: function( guid ) {
			this.delegateEvents( {
				'click .videopress-modal-close': 'closeModal',
				'click .videopress-modal-backdrop': 'closeModal'
			} );

			this.guid = guid;

			if ( ! this.$frame )
				this.$frame = $( '.media-frame-content' );

			this.$video = $( '#videopress-object-' + this.guid );
			this.$el.html( this.template( { 'video' : this.$video.html() } ) );
			this.$modal = this.$( '.videopress-modal' );
			this.$modal.hide();

			this.$frame.append( this.$el );
			this.$modal.slideDown( 'fast' );

			return this;
		},

		closeModal: function() {
			var view = this;
			var guid = this.guid;

			this.$modal.slideUp( 'fast', function() { view.remove(); } );

			$.post( ajaxurl, { action: 'videopress_get_screenshot', guid: guid }, function(r) {
				if ( 'success' == r.status && r.data.length > 0 ) {
					var $thumbnail = $( '#videopress-thumbnail-' + guid );
					var $img = $( '<img />' );

					// Avoid the jumpy effect
					$thumbnail.height( $thumbnail.find( 'img' ).height() );

					$img.attr( 'src', r.data );
					$thumbnail.html( $img );
				}
			}, 'json' );

			return this;
		}
	});

	var VideoPressModal = new VideoPressModalView();

	$( document ).on( 'click', 'a.videopress-preview', function() {
		VideoPressModal.render( $( this ).data( 'videopress-guid' ) );
	} );

	$( document ).on( 'vpRefreshThumbnail', function( e, guid ) {
		console.log( guid );
	} );
})(jQuery);;
!function(){var e,t;e=jQuery,(t=wp.media).view.Settings.Gallery=t.view.Settings.Gallery.extend({render:function(){var a=this.$el;return t.view.Settings.prototype.render.apply(this,arguments),a.append(t.template("jetpack-gallery-settings")),t.gallery.defaults.type="default",this.update.apply(this,["type"]),a.find("select[name=type]").on("change",(function(){var t=a.find("select[name=columns]").closest("label.setting");"default"===e(this).val()||"thumbnails"===e(this).val()?t.show():t.hide()})).change(),this}})}();;
/* global jQuery, wp, wpcomGutenberg */

( function ( $ ) {

	/* Don't allow users to publish if they haven't verified their email yet.
	 *
	 * This is used to render an email confirmation modal in the post editor
	 * when going through the Launchpad newsletter flow
	 * for new users that haven't verified their email yet.
	 * P2 reference - https://wp.me/paYE8P-23O.
	 *
	 * Uses Gutenberg's notice component
	 * @see https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/notice
	 */
	function displayEmailUnverifiedNotice() {
		if ( wp && wp.data && wp.data.dispatch ) {
			wp.data.dispatch( 'core/notices' ).createWarningNotice( wpcomGutenberg.verifyNotice.message, {
				isDismissible: false,
				actions: [
					{
						label: wpcomGutenberg.verifyNotice.resendLabel,
						url: wpcomGutenberg.verifyNotice.resendUrl,
					}
				]
			} );
		}

		setInterval( function() {
			var $publishButton = $( '.editor-post-publish-panel__toggle, .editor-post-publish-button' );
			if ( $publishButton.length < 1 ) {
				return;
			}

			$publishButton.attr( 'disabled', 'disabled' );
		}, 1000 );
	}

	if ( typeof wpcomGutenberg !== 'undefined' && wpcomGutenberg.isEmailUnverified && ! wpcomGutenberg.isPrivateByDefault ) {
		displayEmailUnverifiedNotice();
	}
} )( jQuery );
;
/*
 * jQuery WordPress REST Proxy Request
 * Name:   wpcom_proxy_request
 * Author: Beau Collins <beaucollins@gmail.com>
 *
 * A plugin for jQuery that makes proxy requests (using window.postMessage) to the
 * WordPress.com REST api (https://public-api.wordpress.com/rest/v1/help)
 *
 * Usage:
 * 	jQuery.wpcom_proxy_request( path );
 * 	jQuery.wpcom_proxy_request( path, request );
 * 	jQuery.wpcom_proxy_request( request );
 *
 * Arguments:
 * 	path     : the REST URL path to request (will be appended to the rest base URL)
 * 	request  : request parameters: method (string), path (string), query (object), body (object)
 *
 * Returns
 * 	A jQuery promise() whose callbacks accept the following arguments:
 * 		response : the JSON response for your request
 * 		statusCode : the HTTP statusCode for your request
 *
 * Example:
 * 	// For simple GET requests
 * 	jQuery.wpcom_proxy_request( '/me' ).done( function( response, statusCode ){
 * 		/// ...
 * 	} );
 *
 * 	// More Advanced GET request
 * 	jQuery.wpcom_proxy_request( {
 * 		path: '/sites/en.blog.wordpress.com/posts',
 * 		query: { number: 100 }
 * 	} );
 *
 * 	// POST request
 * 	jQuery.wpcom_proxy_request( {
 * 		method: 'POST',
 * 		path: '/sites/en.blog.wordpress.com/posts/9776/replies/new',
 * 		body: { content: 'This is a comment' }
 * 	} );
 */
(function($){
	// don't run this more than once per context
	if ( $.wpcom_proxy_request) {
		return;
	}

	var proxy,
	origin         = window.location.protocol + '//' + window.location.hostname,
	proxyOrigin    = 'https://public-api.wordpress.com',

	ready          = false,
	supported      = true, // assume window.postMessage is supported
	usingPM        = false, // If we don't have window.postMessage, postmessage.js may be available
	structuredData = true, // supports passing of structured data

	bufferedOps    = [],   // store requests while we wait for the proxy iframe to initialize

	// Store `jQuery.Deferred` objects for each pending request.
	deferreds      = {},

	// Store `this` context objects for each pending request, if given.
	callbackContexts = {},

	/**
	 * Firefox apparently doesn't like sending `File` instances cross-domain.
	 * It results in a "DataCloneError: The object could not be cloned." error.
	 * Apparently this is for "security purposes" but it's actually silly if that's
	 * the argument because we can just read the File manually into an ArrayBuffer
	 * and we can work around this "security restriction".
	 *
	 * See: https://bugzilla.mozilla.org/show_bug.cgi?id=722126#c8
	 */
	 hasFileSerializationBug = true,

	 // Can we pass structured data via postMessage or just strings?
	check = function( event ){
		structuredData = 'object' === typeof event.originalEvent.data;
		$(window).unbind( 'message', check );
		buildProxy();
	},

	// Initialize the proxy iframe
	buildProxy = function() {
		// Start listening to messages
		if ( !usingPM ) {
			$(window).bind( 'message', receive );
		} else {
			pm.bind( 'proxy', function( e ) { receive( e ); } );
		}

		proxy = document.createElement( 'iframe' );
		proxy.src = 'https://public-api.wordpress.com/wp-admin/rest-proxy/#' + origin;
		proxy.style.display = 'none';

		// Process any buffered API calls after the iframe proxy is ready
		$(proxy).bind( 'load', function() {
			var request;
			ready = true;
			while ( request = bufferedOps.shift() ) {
				postRequest( request );
			}
		});

		// Bring it
		$(document).ready( function() {
			$(document.body).append( proxy );
		} );
	},

	// Message event listener
	receive = function( e ) {
		var event,
			data,
			deferred_id,
			deferred,
			context;

		if ( !usingPM ) {
			// look at the real event, not the jQuery mocked one
			event = e.originalEvent;

			if ( event.origin !== proxyOrigin ) {
				return;
			}

			data = structuredData ? event.data : JSON.parse( event.data );
		} else {
			data = e;
		}

		if ( !data || !data.length ) {
			return;
		}

		deferred_id = data[ data.length - 1 ];

		if ( 'undefined' === typeof deferreds[deferred_id] ) {
			return;
		}

		deferred = deferreds[deferred_id];
		delete deferreds[deferred_id];

		context = callbackContexts[ deferred_id ];
		if ( context ) {
			// `resolveWith` takes args as an array.
			deferred.resolveWith.call( deferred, context, data.slice( 0, -1 ) );
			delete callbackContexts[ deferred_id ];
		} else {
			// `resolve` takes args as a list of parameters.
			deferred.resolve.apply( deferred, data.slice( 0, -1 ) );
		}
	},

	// Calls API
	perform = function() {
		var request = buildRequest.apply( null, arguments );

		postRequest( request );

		return deferreds[request.callback].promise();
	},

	// Buffers API request
	buffer = function() {
		var request = buildRequest.apply( null, arguments );

		bufferedOps.push( request );

		return deferreds[request.callback].promise();
	},

	// Submits the API request to the proxy iframe
	postRequest = function( request ) {
		var files = findFilesInRequest( request ),
	 		data = structuredData ? request : JSON.stringify( request );

		if ( hasFileSerializationBug && files.has_files ) {
			postAsArrayBuffer( request, files );
		} else {
			try {
				sendPostMessage( data );
			} catch( e ) {
				// were we trying to serialize a `File`?
				if ( files.has_files ) {

					// cache this check for the next API request
					hasFileSerializationBug = true;
					postAsArrayBuffer( request, files );
				} else {
					// not interested, rethrow
					throw e;
				}
			}
		}
	},

	sendPostMessage = function( data ) {
		if ( !usingPM ) {
			proxy.contentWindow.postMessage( data, proxyOrigin );
		} else if ( window.pm ) {
			pm( {
				data  : data,
				type  : 'proxy',
				target: proxy.contentWindow,
				url   : 'https://public-api.wordpress.com/wp-admin/rest-proxy/#' + origin,
				origin: proxyOrigin
			} );
		}
	},

	postAsArrayBuffer = function( request, files ) {
		if ( ! files.has_files )
			return;


		$.each( files.file_keys, function( n, i ){
			var reader = new FileReader(),
				key = request.formData[i][0],
				file = request.formData[i][1];

			reader.onload = function(e) {
				request.formData[i] = [ key, {
					fileContents: e.target.result,
					fileName : file.name,
					mimeType: file.type
				} ];

				var are_there_still_files = findFilesInRequest( request );
				if ( ! are_there_still_files.has_files ) {
					proxy.contentWindow.postMessage( request, proxyOrigin );
				}
			};

			reader.readAsArrayBuffer( file );
		});
	},

	findFilesInRequest = function( request ) {
		var files = {
			has_files : false,
			file_keys : []
		};

		if ( ! structuredData || ! request.formData || request.formData.length <= 0 )
			return files;

		$.each( request.formData, function( i, arr ) {
			var maybe_a_file = arr[1];
			if ( 'object' == typeof maybe_a_file && '[object File]' == Object.prototype.toString.call( maybe_a_file ) ) {
				files.has_files = true;
				files.file_keys.push( i );
			}
		});

		return files;
	},

	// Builds the postMessage request object
	buildRequest = function() {
		var args     = jQuery.makeArray( arguments ),
		    request  = args.pop(),
		    path     = args.pop(),
		    deferred = new jQuery.Deferred(),
		    deferred_id;

		// @todo - remove this back-compat code
		if ( jQuery.isFunction( request ) ) {
			deferred.done( request );
			request = path;
			path    = args.pop();
		}

		if ( 'string' === typeof( request ) ) {
			request = { path: request };
		}

		if ( path ) {
			request.path = path;
		}

		do {
			deferred_id = Math.random();
		} while ( 'undefined' !== typeof deferreds[deferred_id] );

		deferreds[deferred_id] = deferred;

		if ( request.context ) {
			callbackContexts[ deferred_id ] = request.context;
			// Trying to pass functions through `postMessage` is a bad time.
			request = jQuery.extend( {}, request );
			delete request.context;
		}

		request.callback = deferred_id;
		request.supports_args = true; // supports receiving variable amount of arguments

		if ( request.hasOwnProperty( 'signal' ) ) {
			request.signal.addEventListener( 'abort', () => {
				delete deferreds[deferred_id];
				sendPostMessage( { abort: true, callback: deferred_id } );
				// Rejecting the deferred will call to Deferred#catch handler defined in
				// the return value or `wpcomRequest` in `gutenberg-wpcom-apifetch.js`.
				// That will in turn delegate to the wrapping's Promise (the actual promise
				// returned by `wp.apiFetch`) `catch` handler. It's also important to
				// note that rejecting a deferred will still run it's `done` handler(s)
				// so beware of that.
				deferred.reject( new DOMException( 'AbortError', 'AbortError' ) );
			});
			// remove the `signal` field so that it's not sent to the proxy iframe
			delete request.signal;
		}
		return request;
	};

	// Step 1: do we have postMessage? ( in IE8, typeof window.postMessage == 'object' )
	if ( jQuery.inArray( typeof window.postMessage, [ 'function', 'object' ] ) != -1 ) {
		// Step 2: Check if we can pass structured data or just strings
		$(window).bind( 'message', check );
		window.postMessage( {}, origin );
	} else if ( window.pm ) {
		usingPM = true;
		// Step 2: We can always just used structured data.
		buildProxy();
	} else {
		supported = false;
	}

	$.wpcom_proxy_request = function(){
		if ( !supported ) {
			throw( 'Browser does not support window.postMessage' );
		}

		if ( ready ) {
			// Make API request
			return perform.apply( null, arguments );
		} else {
			// Buffer API request
			return buffer.apply( null, arguments );
		}
	};

	$.wpcom_proxy_rebuild = function() {
		if ( !ready )
			return;

		ready = false;
		$(proxy).remove();

		buildProxy();
	};
})(jQuery);
;
/*! This file is auto-generated */
!function(e){"use strict";e.wp=e.wp||{},wp.api=wp.api||new function(){this.models={},this.collections={},this.views={}},wp.api.versionString=wp.api.versionString||"wp/v2/",!_.isFunction(_.includes)&&_.isFunction(_.contains)&&(_.includes=_.contains)}(window),function(e){"use strict";var t,i;e.wp=e.wp||{},wp.api=wp.api||{},wp.api.utils=wp.api.utils||{},wp.api.getModelByRoute=function(t){return _.find(wp.api.models,function(e){return e.prototype.route&&t===e.prototype.route.index})},wp.api.getCollectionByRoute=function(t){return _.find(wp.api.collections,function(e){return e.prototype.route&&t===e.prototype.route.index})},Date.prototype.toISOString||(t=function(e){return i=1===(i=String(e)).length?"0"+i:i},Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+t(this.getUTCMonth()+1)+"-"+t(this.getUTCDate())+"T"+t(this.getUTCHours())+":"+t(this.getUTCMinutes())+":"+t(this.getUTCSeconds())+"."+String((this.getUTCMilliseconds()/1e3).toFixed(3)).slice(2,5)+"Z"}),wp.api.utils.parseISO8601=function(e){var t,i,n,o,s=0,a=[1,4,5,6,7,10,11];if(i=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(e)){for(n=0;o=a[n];++n)i[o]=+i[o]||0;i[2]=(+i[2]||1)-1,i[3]=+i[3]||1,"Z"!==i[8]&&void 0!==i[9]&&(s=60*i[10]+i[11],"+"===i[9]&&(s=0-s)),t=Date.UTC(i[1],i[2],i[3],i[4],i[5]+s,i[6],i[7])}else t=Date.parse?Date.parse(e):NaN;return t},wp.api.utils.getRootUrl=function(){return e.location.origin?e.location.origin+"/":e.location.protocol+"//"+e.location.host+"/"},wp.api.utils.capitalize=function(e){return _.isUndefined(e)?e:e.charAt(0).toUpperCase()+e.slice(1)},wp.api.utils.capitalizeAndCamelCaseDashes=function(e){return _.isUndefined(e)?e:(e=wp.api.utils.capitalize(e),wp.api.utils.camelCaseDashes(e))},wp.api.utils.camelCaseDashes=function(e){return e.replace(/-([a-z])/g,function(e){return e[1].toUpperCase()})},wp.api.utils.extractRoutePart=function(e,t,i,n){return t=t||1,i=i||wp.api.versionString,i=(e=0===e.indexOf("/"+i)?e.substr(i.length+1):e).split("/"),n&&(i=i.reverse()),_.isUndefined(i[--t])?"":i[t]},wp.api.utils.extractParentName=function(e){var t=e.lastIndexOf("_id>[\\d]+)/");return t<0?"":((e=(e=e.substr(0,t-1)).split("/")).pop(),e.pop())},wp.api.utils.decorateFromRoute=function(e,t){_.each(e,function(e){_.includes(e.methods,"POST")||_.includes(e.methods,"PUT")?_.isEmpty(e.args)||(_.isEmpty(t.prototype.args)?t.prototype.args=e.args:t.prototype.args=_.extend(t.prototype.args,e.args)):_.includes(e.methods,"GET")&&!_.isEmpty(e.args)&&(_.isEmpty(t.prototype.options)?t.prototype.options=e.args:t.prototype.options=_.extend(t.prototype.options,e.args))})},wp.api.utils.addMixinsAndHelpers=function(t,e,i){function n(e,t,i,n,o){var s,a=jQuery.Deferred(),e=e.get("_embedded")||{};return _.isNumber(t)&&0!==t?(s=(s=e[n]?_.findWhere(e[n],{id:t}):s)||{id:t},(e=new wp.api.models[i](s)).get(o)?a.resolve(e):e.fetch({success:function(e){a.resolve(e)},error:function(e,t){a.reject(t)}}),a.promise()):(a.reject(),a)}function p(e,t){_.each(e.models,function(e){e.set("parent_post",t)})}var o=!1,s=["date","modified","date_gmt","modified_gmt"],a={setDate:function(e,t){t=t||"date";if(_.indexOf(s,t)<0)return!1;this.set(t,e.toISOString())},getDate:function(e){var e=e||"date",t=this.get(e);return!(_.indexOf(s,e)<0||_.isNull(t))&&new Date(wp.api.utils.parseISO8601(t))}},r={getMeta:function(e){return this.get("meta")[e]},getMetas:function(){return this.get("meta")},setMetas:function(e){var t=this.get("meta");_.extend(t,e),this.set("meta",t)},setMeta:function(e,t){var i=this.get("meta");i[e]=t,this.set("meta",i)}},c={getRevisions:function(){return e=this,t="PostRevisions",s=o="",a=jQuery.Deferred(),r=e.get("id"),e=e.get("_embedded")||{},_.isNumber(r)&&0!==r?(_.isUndefined(i)||_.isUndefined(e[i])?o={parent:r}:s=_.isUndefined(n)?e[i]:e[i][n],e=new wp.api.collections[t](s,o),_.isUndefined(e.models[0])?e.fetch({success:function(e){p(e,r),a.resolve(e)},error:function(e,t){a.reject(t)}}):(p(e,r),a.resolve(e)),a.promise()):(a.reject(),a);var e,t,i,n,o,s,a,r}},d={getTags:function(){var e=this.get("tags"),t=new wp.api.collections.Tags;return _.isEmpty(e)?jQuery.Deferred().resolve([]):t.fetch({data:{include:e}})},setTags:function(e){var i,n=this,o=[];if(_.isString(e))return!1;_.isArray(e)?(new wp.api.collections.Tags).fetch({data:{per_page:100},success:function(t){_.each(e,function(e){(i=new wp.api.models.Tag(t.findWhere({slug:e}))).set("parent_post",n.get("id")),o.push(i)}),e=new wp.api.collections.Tags(o),n.setTagsWithCollection(e)}}):this.setTagsWithCollection(e)},setTagsWithCollection:function(e){return this.set("tags",e.pluck("id")),this.save()}},l={getCategories:function(){var e=this.get("categories"),t=new wp.api.collections.Categories;return _.isEmpty(e)?jQuery.Deferred().resolve([]):t.fetch({data:{include:e}})},setCategories:function(e){var i,n=this,o=[];if(_.isString(e))return!1;_.isArray(e)?(new wp.api.collections.Categories).fetch({data:{per_page:100},success:function(t){_.each(e,function(e){(i=new wp.api.models.Category(t.findWhere({slug:e}))).set("parent_post",n.get("id")),o.push(i)}),e=new wp.api.collections.Categories(o),n.setCategoriesWithCollection(e)}}):this.setCategoriesWithCollection(e)},setCategoriesWithCollection:function(e){return this.set("categories",e.pluck("id")),this.save()}},u={getAuthorUser:function(){return n(this,this.get("author"),"User","author","name")}},g={getFeaturedMedia:function(){return n(this,this.get("featured_media"),"Media","wp:featuredmedia","source_url")}};return _.isUndefined(t.prototype.args)||(_.each(s,function(e){_.isUndefined(t.prototype.args[e])||(o=!0)}),o&&(t=t.extend(a)),_.isUndefined(t.prototype.args.author)||(t=t.extend(u)),_.isUndefined(t.prototype.args.featured_media)||(t=t.extend(g)),_.isUndefined(t.prototype.args.categories)||(t=t.extend(l)),_.isUndefined(t.prototype.args.meta)||(t=t.extend(r)),_.isUndefined(t.prototype.args.tags)||(t=t.extend(d)),_.isUndefined(i.collections[e+"Revisions"])||(t=t.extend(c))),t}}(window),function(){"use strict";var i=window.wpApiSettings||{},e=["Comment","Media","Comment","Post","Page","Status","Taxonomy","Type"];wp.api.WPApiBaseModel=Backbone.Model.extend({initialize:function(){-1===_.indexOf(e,this.name)&&(this.requireForceForDelete=!0)},sync:function(e,t,i){var n;return i=i||{},_.isNull(t.get("date_gmt"))&&t.unset("date_gmt"),_.isEmpty(t.get("slug"))&&t.unset("slug"),_.isFunction(t.nonce)&&!_.isEmpty(t.nonce())&&(n=i.beforeSend,i.beforeSend=function(e){if(e.setRequestHeader("X-WP-Nonce",t.nonce()),n)return n.apply(this,arguments)},i.complete=function(e){e=e.getResponseHeader("X-WP-Nonce");e&&_.isFunction(t.nonce)&&t.nonce()!==e&&t.endpointModel.set("nonce",e)}),this.requireForceForDelete&&"delete"===e&&(t.url=t.url()+"?force=true"),Backbone.sync(e,t,i)},save:function(e,t){return!(!_.includes(this.methods,"PUT")&&!_.includes(this.methods,"POST"))&&Backbone.Model.prototype.save.call(this,e,t)},destroy:function(e){return!!_.includes(this.methods,"DELETE")&&Backbone.Model.prototype.destroy.call(this,e)}}),wp.api.models.Schema=wp.api.WPApiBaseModel.extend({defaults:{_links:{},namespace:null,routes:{}},initialize:function(e,t){t=t||{},wp.api.WPApiBaseModel.prototype.initialize.call(this,e,t),this.apiRoot=t.apiRoot||i.root,this.versionString=t.versionString||i.versionString},url:function(){return this.apiRoot+this.versionString}})}(),function(){"use strict";window.wpApiSettings;wp.api.WPApiBaseCollection=Backbone.Collection.extend({initialize:function(e,t){this.state={data:{},currentPage:null,totalPages:null,totalObjects:null},_.isUndefined(t)?this.parent="":this.parent=t.parent},sync:function(e,t,i){var n,o,s=this;return i=i||{},_.isFunction(t.nonce)&&!_.isEmpty(t.nonce())&&(n=i.beforeSend,i.beforeSend=function(e){if(e.setRequestHeader("X-WP-Nonce",t.nonce()),n)return n.apply(s,arguments)},i.complete=function(e){e=e.getResponseHeader("X-WP-Nonce");e&&_.isFunction(t.nonce)&&t.nonce()!==e&&t.endpointModel.set("nonce",e)}),"read"===e&&(i.data?(s.state.data=_.clone(i.data),delete s.state.data.page):s.state.data=i.data={},void 0===i.data.page?(s.state.currentPage=null,s.state.totalPages=null,s.state.totalObjects=null):s.state.currentPage=i.data.page-1,o=i.success,i.success=function(e,t,i){if(_.isUndefined(i)||(s.state.totalPages=parseInt(i.getResponseHeader("x-wp-totalpages"),10),s.state.totalObjects=parseInt(i.getResponseHeader("x-wp-total"),10)),null===s.state.currentPage?s.state.currentPage=1:s.state.currentPage++,o)return o.apply(this,arguments)}),Backbone.sync(e,t,i)},more:function(e){if((e=e||{}).data=e.data||{},_.extend(e.data,this.state.data),void 0===e.data.page){if(!this.hasMore())return!1;null===this.state.currentPage||this.state.currentPage<=1?e.data.page=2:e.data.page=this.state.currentPage+1}return this.fetch(e)},hasMore:function(){return null===this.state.totalPages||null===this.state.totalObjects||null===this.state.currentPage?null:this.state.currentPage<this.state.totalPages}})}(),function(){"use strict";var o,s={},c=window.wpApiSettings||{};window.wp=window.wp||{},wp.api=wp.api||{},_.isEmpty(c)&&(c.root=window.location.origin+"/wp-json/"),o=Backbone.Model.extend({defaults:{apiRoot:c.root,versionString:wp.api.versionString,nonce:null,schema:null,models:{},collections:{}},initialize:function(){var e,t=this;Backbone.Model.prototype.initialize.apply(t,arguments),e=jQuery.Deferred(),t.schemaConstructed=e.promise(),t.schemaModel=new wp.api.models.Schema(null,{apiRoot:t.get("apiRoot"),versionString:t.get("versionString"),nonce:t.get("nonce")}),t.schemaModel.once("change",function(){t.constructFromSchema(),e.resolve(t)}),t.get("schema")?t.schemaModel.set(t.schemaModel.parse(t.get("schema"))):!_.isUndefined(sessionStorage)&&(_.isUndefined(c.cacheSchema)||c.cacheSchema)&&sessionStorage.getItem("wp-api-schema-model"+t.get("apiRoot")+t.get("versionString"))?t.schemaModel.set(t.schemaModel.parse(JSON.parse(sessionStorage.getItem("wp-api-schema-model"+t.get("apiRoot")+t.get("versionString"))))):t.schemaModel.fetch({success:function(e){if(!_.isUndefined(sessionStorage)&&(_.isUndefined(c.cacheSchema)||c.cacheSchema))try{sessionStorage.setItem("wp-api-schema-model"+t.get("apiRoot")+t.get("versionString"),JSON.stringify(e))}catch(e){}},error:function(e){window.console.log(e)}})},constructFromSchema:function(){var s=this,a=c.mapping||{models:{Categories:"Category",Comments:"Comment",Pages:"Page",PagesMeta:"PageMeta",PagesRevisions:"PageRevision",Posts:"Post",PostsCategories:"PostCategory",PostsRevisions:"PostRevision",PostsTags:"PostTag",Schema:"Schema",Statuses:"Status",Tags:"Tag",Taxonomies:"Taxonomy",Types:"Type",Users:"User"},collections:{PagesMeta:"PageMeta",PagesRevisions:"PageRevisions",PostsCategories:"PostCategories",PostsMeta:"PostMeta",PostsRevisions:"PostRevisions",PostsTags:"PostTags"}},e=s.get("modelEndpoints"),i=new RegExp("(?:.*[+)]|/("+e.join("|")+"))$"),n=[],o=[],r=s.get("apiRoot").replace(wp.api.utils.getRootUrl(),""),p={models:{},collections:{}};_.each(s.schemaModel.get("routes"),function(e,t){t!==s.get(" versionString")&&t!==r&&t!=="/"+s.get("versionString").slice(0,-1)&&(i.test(t)?n:o).push({index:t,route:e})}),_.each(n,function(e){var t,i=wp.api.utils.extractRoutePart(e.index,2,s.get("versionString"),!0),n=wp.api.utils.extractRoutePart(e.index,1,s.get("versionString"),!1),o=wp.api.utils.extractRoutePart(e.index,1,s.get("versionString"),!0);n===s.get("versionString")&&(n=""),"me"===o&&(i="me"),""!==n&&n!==i?(t=wp.api.utils.capitalizeAndCamelCaseDashes(n)+wp.api.utils.capitalizeAndCamelCaseDashes(i),t=a.models[t]||t,p.models[t]=wp.api.WPApiBaseModel.extend({url:function(){var e=s.get("apiRoot")+s.get("versionString")+n+"/"+(_.isUndefined(this.get("parent"))||0===this.get("parent")?_.isUndefined(this.get("parent_post"))?"":this.get("parent_post")+"/":this.get("parent")+"/")+i;return _.isUndefined(this.get("id"))||(e+="/"+this.get("id")),e},nonce:function(){return s.get("nonce")},endpointModel:s,route:e,name:t,methods:e.route.methods,endpoints:e.route.endpoints})):(t=wp.api.utils.capitalizeAndCamelCaseDashes(i),t=a.models[t]||t,p.models[t]=wp.api.WPApiBaseModel.extend({url:function(){var e=s.get("apiRoot")+s.get("versionString")+("me"===i?"users/me":i);return _.isUndefined(this.get("id"))||(e+="/"+this.get("id")),e},nonce:function(){return s.get("nonce")},endpointModel:s,route:e,name:t,methods:e.route.methods,endpoints:e.route.endpoints})),wp.api.utils.decorateFromRoute(e.route.endpoints,p.models[t],s.get("versionString"))}),_.each(o,function(e){var t,i,n=e.index.slice(e.index.lastIndexOf("/")+1),o=wp.api.utils.extractRoutePart(e.index,1,s.get("versionString"),!1);""!==o&&o!==n&&s.get("versionString")!==o?(t=wp.api.utils.capitalizeAndCamelCaseDashes(o)+wp.api.utils.capitalizeAndCamelCaseDashes(n),i=a.models[t]||t,t=a.collections[t]||t,p.collections[t]=wp.api.WPApiBaseCollection.extend({url:function(){return s.get("apiRoot")+s.get("versionString")+o+"/"+(_.isUndefined(this.parent)||""===this.parent?_.isUndefined(this.get("parent_post"))?"":this.get("parent_post")+"/":this.parent+"/")+n},model:function(e,t){return new p.models[i](e,t)},nonce:function(){return s.get("nonce")},endpointModel:s,name:t,route:e,methods:e.route.methods})):(t=wp.api.utils.capitalizeAndCamelCaseDashes(n),i=a.models[t]||t,t=a.collections[t]||t,p.collections[t]=wp.api.WPApiBaseCollection.extend({url:function(){return s.get("apiRoot")+s.get("versionString")+n},model:function(e,t){return new p.models[i](e,t)},nonce:function(){return s.get("nonce")},endpointModel:s,name:t,route:e,methods:e.route.methods})),wp.api.utils.decorateFromRoute(e.route.endpoints,p.collections[t])}),_.each(p.models,function(e,t){p.models[t]=wp.api.utils.addMixinsAndHelpers(e,t,p)}),s.set("models",p.models),s.set("collections",p.collections)}}),wp.api.endpoints=new Backbone.Collection,wp.api.init=function(e){var t,i,n={};return e=e||{},n.nonce=_.isString(e.nonce)?e.nonce:c.nonce||"",n.apiRoot=e.apiRoot||c.root||"/wp-json",n.versionString=e.versionString||c.versionString||"wp/v2/",n.schema=e.schema||null,n.modelEndpoints=e.modelEndpoints||["me","settings"],n.schema||n.apiRoot!==c.root||n.versionString!==c.versionString||(n.schema=c.schema),s[n.apiRoot+n.versionString]||(e=(e=wp.api.endpoints.findWhere({apiRoot:n.apiRoot,versionString:n.versionString}))||new o(n),i=(t=jQuery.Deferred()).promise(),e.schemaConstructed.done(function(e){wp.api.endpoints.add(e),wp.api.models=_.extend(wp.api.models,e.get("models")),wp.api.collections=_.extend(wp.api.collections,e.get("collections")),t.resolve(e)}),s[n.apiRoot+n.versionString]=i),s[n.apiRoot+n.versionString]},wp.api.loadPromise=wp.api.init()}();;
/* global _, _currentSiteId, jQuery, Promise, wp, wpApiSettings, wpcomGutenberg */

/**
 * Normalizes the path for requests to the public API.
 */
function wpcomFetchNormalizePath( options ) {
	if ( options.url && options.url.indexOf( wpApiSettings.root ) !== -1 ) {
		options.path = options.url.replace( wpApiSettings.root, '' );
		delete options.url;
	}

	if ( options.path ) {
		// Ensures path starts with a slash.
		if ( ! options.path.startsWith( '/' ) ) {
			options.path = '/' + options.path;
		}

		// Removes namespace from path.
		if ( options.apiNamespace ) {
			options.path = options.path.replace( '/' + options.apiNamespace, '' );
		}
	}

	return options;
}

/**
 * Creates a fetch-like response.
 */
function wpcomFetchCreateFetchResponse( data, status, headers ) {
	var fetchResponse = {};
	var normalizedHeaders = {};
	for ( var header in headers ) {
		normalizedHeaders[ header.toLowerCase() ] = headers[ header ];
	}
	// The response is a zip file
	if ( normalizedHeaders['content-type'] === 'application/zip' ) {
		normalizedHeaders['content-disposition'] = 'attachment; filename=site-export.zip';
	}
	if ( Array.isArray( data ) ) {
		fetchResponse = data.slice( 0 );
	} else if ( typeof data === 'object' ) {
		fetchResponse = Object.assign( {}, data );
	}
	fetchResponse.status = status;
	fetchResponse.json = function () { return Promise.resolve( data ); };
	// Add a blob function to the response to allow for downloading the response as a file.
	fetchResponse.blob = function () { return Promise.resolve( data ); };
	fetchResponse.headers = {
		get: function ( name ) {
			return normalizedHeaders[ name && name.toLowerCase() ];
		}
	};
	return fetchResponse;
}

/**
 * Returns a fetch handler using the wpcom proxy library.
 */
function wpcomFetch( options ) {
	var request = Object.assign( {}, options );

	// Normalize path again after running the default core middlewares.
	request = wpcomFetchNormalizePath( request );

	var wpcomRequest;
	if ( request.path ) {
		wpcomRequest = jQuery.wpcom_proxy_request;

		request.query = request.path.split( '?' )[ 1 ];
		request.path = request.path.split( '?' )[ 0 ];

		if (
			request.headers &&
			request.headers['X-HTTP-Method-Override'] &&
			[ 'PUT', 'DELETE' ].includes( request.headers['X-HTTP-Method-Override'].toUpperCase() )
		) {
			request.method = request.headers['X-HTTP-Method-Override'];
		}

		// Handles data on editable requests.
		if ( request.method && [ 'POST', 'PUT', 'DELETE' ].includes( request.method.toUpperCase() ) ) {
			if ( typeof request.body === 'undefined' ) {
				request.body = {};
			}

			if ( request.body.constructor.name === 'FormData' && request.body.has( 'file' ) ) {
				request.data = _.pairs( Array.from( request.body.entries() ) );
				request.formData = [ [ 'file', request.body.get( 'file' ) ] ];

				// Only attach valid post IDs to deal with the p2tenberg case where the post ID is null, which
				// results in an error.
				if ( typeof request.body.get( 'post' ) === 'string' ) {
					request.formData.push( [ 'post', request.body.get( 'post' ) ] );
				}
				delete request.body;
			} else {
				request.body = request.data || {};
			}
		} else {
			if ( request.headers && request.headers.Accept === 'application/zip' ) {
				request.responseType = 'blob';
			}
		}
	} else {
		wpcomRequest = jQuery.ajax;
		// jQuery.ajax needs special handling to be able to send FormData, such as when submitting PHP meta boxes
		if (request.body && request.body.constructor.name === 'FormData') {
			request.contentType = false;
			request.data = request.body;
			request.processData = false;
			delete request.body;
		}
	}

	return new Promise( function ( resolve, reject ) {
		wpcomRequest( request )
			.done( function ( response, statusCodeOrText, headersOrXhr ) {
				// When the request is aborted, `done` is still called but
				// the data below is not available, hence, `noop` evaluates
				// to `true` and we return early. The promised is then
				// resolved in the chained `catch` block.
				//
				// For further context, see: https://code.a8c.com/D73778.
				var noop = ! ( response && statusCodeOrText && headersOrXhr );
				if ( noop ) { return };

				var shouldParseResponse = request.parse !== false;
				var statusCode;
				var headers;
				if ( request.path ) {
					statusCode = statusCodeOrText;
					headers = headersOrXhr;
				} else {
					statusCode = headersOrXhr.status;
					var headersArray = headersOrXhr.getAllResponseHeaders().split('\r\n');
					headers = headersArray.reduce( function ( currentHeaders, header ) {
						if ( header ) {
							var parts = header.split( ': ' );
							currentHeaders[ parts[ 0 ] ] = parts[ 1 ];
						}
						return currentHeaders;
					}, {} );
				}

				if ( ! shouldParseResponse ) {
					response = wpcomFetchCreateFetchResponse( response, statusCode, headers );
				}

				if ( statusCode >= 200 && statusCode < 300 ) {
					resolve( response );
				}

				if ( statusCode === 0 ) {
					reject( shouldParseResponse
						? { code: 'fetch_error', message: wpcomGutenberg.errorMessages.apiFetchOffline }
						: response
					);
				}

				// If the response has a code and a message property or a list of errors,
				// we'll return the response instead of throwing an unknown error.
				var hasResponse = typeof response === 'object' && response !== null;
				var hasErrorMessage = hasResponse && (
					( response.code && response.message ) || ( response.errors && response.errors.length )
				);

				reject( shouldParseResponse && ! hasErrorMessage
					? { code: 'unknown_error', message: wpcomGutenberg.errorMessages.apiFetchUnknown }
					: response
				);
			} )
			.catch( function( error ) {
				reject( error );
			} )
	} );
}

/**
 * Adds the given param to the given URL.
 */
function wpcomFetchAddQueryParam( url, paramName, paramValue ) {
	if ( url && paramName && paramValue && ! wp.url.hasQueryArg( url, paramName ) ) {
		var params = {};
		params[ paramName ] = paramValue;
		url = wp.url.addQueryArgs( url, params );
	}

	return url;
}

/**
 * Determines the namespace from the request path.
 */
function wpcomFetchSetNamespace( options, next ) {
	if ( options.path && ! options.apiNamespace ) {
		var namespace = options.path.match( /^\/([a-z-]+\/v?[0-9.]+|__experimental)\// );
		if ( namespace ) {
			options.apiNamespace = namespace[ 1 ];
			options.path = options.path.replace( '/' + options.apiNamespace, '' );
		} else {
			// Defaults all requests to the wp/v2 namespace.
			options.apiNamespace = 'wp/v2';
		}
	}
	return next( options, next );
}

/**
 * Marks requests to the internal endpoint as global.
 */
function wpcomFetchHandleInternalRequests( options, next ) {
	if ( options.path && options.path.indexOf( 'internal' ) !== -1 ) {
		options.apiNamespace = 'rest/v1.1';
		options.global = true;
	}
	return next( options, next );
}

/**
 * Ensures requests to rest/v* endpoints returns an enveloped http response.
 */
function wpcomFetchHandleRestEndpoints( options, next ) {
	// Gutenberg expects an enveloped http response which is not the default behavior on rest/v* endpoints.
	if ( options.apiNamespace && options.apiNamespace.indexOf( 'rest' ) !== -1 ) {
		options.path = wpcomFetchAddQueryParam( options.path, 'force', 'wpcom' );
		options.path = wpcomFetchAddQueryParam( options.path, 'http_envelope', '1' );
	}
	return next( options, next );
}

/**
 * Ensures the API requests target the current environment.
 */
function wpcomFetchTargetEnv( options, next ) {
	options.path = wpcomFetchAddQueryParam( options.path, 'environment-id', wpcomGutenberg.environmentId );
	return next( options, next );
}

/**
 * Adds a nonce to all requests to indicate they are triggered by Gutenberg.
 */
function wpcomFetchGutenbergNonce( options, next ) {
	options.path = wpcomFetchAddQueryParam( options.path, '_gutenberg_nonce', wpcomGutenberg._gutenberg_nonce );
	return next( options, next );
}

/**
 * Prefixes any non-global request endpoint to the site specific endpoint.
 */
function wpcomFetchAddSitePrefix( options, next ) {
	if ( options.hasOwnProperty( 'path' ) && 'undefined' !== typeof( options.path ) && ! options.global ) {
		if ( '' === options.path ) {
			options.path = '/?';
		}
		if ( options.path.startsWith( '/?' ) ) {
			// The root endpoint is a special case for wpcom, remap to
			// https://public-api.wordpress.com/wp-json/?rest_route=/sites/{site_id}/
			options.path = wpcomFetchAddQueryParam( options.path, 'rest_route', '/sites/' + _currentSiteId + '/' );
			options.apiNamespace = 'wp-json';
		} else if ( options.path.indexOf( '/sites/' ) === -1 ) {
			options.path = '/sites/' + _currentSiteId + options.path;
		}
	}
	return next( options, next );
}

// Register middlewares (last-registered runs first).
[
	wpcomFetchAddSitePrefix, // wpcomFetchAddSitePrefix must to be registered first, so it runs last.
	wpcomFetchGutenbergNonce,
	wpcomFetchTargetEnv,
	wpcomFetchHandleRestEndpoints,
	wpcomFetchHandleInternalRequests,
	wpcomFetchSetNamespace,
	function( options, next ) { // Path needs to be normalized first.
		return next( wpcomFetchNormalizePath( options ), next );
	}
].forEach( function ( middleware ) {
	wp.apiFetch.use( middleware );
} );

// Set custom fetch handler.
wp.apiFetch.setFetchHandler( wpcomFetch );
;
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("react")):"function"==typeof define&&define.amd?define(["react"],e):"object"==typeof exports?exports.createReactClass=e(require("react")):t.createReactClass=e(t.React)}(this,function(t){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";function o(t){return t}function r(t,e,n){function r(t,e){var n=N.hasOwnProperty(e)?N[e]:null;b.hasOwnProperty(e)&&s("OVERRIDE_BASE"===n,"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.",e),t&&s("DEFINE_MANY"===n||"DEFINE_MANY_MERGED"===n,"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",e)}function u(t,n){if(n){s("function"!=typeof n,"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."),s(!e(n),"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");var o=t.prototype,i=o.__reactAutoBindPairs;n.hasOwnProperty(c)&&g.mixins(t,n.mixins);for(var a in n)if(n.hasOwnProperty(a)&&a!==c){var u=n[a],p=o.hasOwnProperty(a);if(r(p,a),g.hasOwnProperty(a))g[a](t,u);else{var l=N.hasOwnProperty(a),E="function"==typeof u,m=E&&!l&&!p&&!1!==n.autobind;if(m)i.push(a,u),o[a]=u;else if(p){var h=N[a];s(l&&("DEFINE_MANY_MERGED"===h||"DEFINE_MANY"===h),"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.",h,a),"DEFINE_MANY_MERGED"===h?o[a]=f(o[a],u):"DEFINE_MANY"===h&&(o[a]=d(o[a],u))}else o[a]=u}}}else;}function p(t,e){if(e)for(var n in e){var o=e[n];if(e.hasOwnProperty(n)){var r=n in g;s(!r,'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',n);var i=n in t;if(i){var a=_.hasOwnProperty(n)?_[n]:null;return s("DEFINE_MANY_MERGED"===a,"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",n),void(t[n]=f(t[n],o))}t[n]=o}}}function l(t,e){s(t&&e&&"object"==typeof t&&"object"==typeof e,"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.");for(var n in e)e.hasOwnProperty(n)&&(s(void 0===t[n],"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.",n),t[n]=e[n]);return t}function f(t,e){return function(){var n=t.apply(this,arguments),o=e.apply(this,arguments);if(null==n)return o;if(null==o)return n;var r={};return l(r,n),l(r,o),r}}function d(t,e){return function(){t.apply(this,arguments),e.apply(this,arguments)}}function E(t,e){var n=e.bind(t);return n}function m(t){for(var e=t.__reactAutoBindPairs,n=0;n<e.length;n+=2){var o=e[n],r=e[n+1];t[o]=E(t,r)}}function h(t){var e=o(function(t,o,r){this.__reactAutoBindPairs.length&&m(this),this.props=t,this.context=o,this.refs=a,this.updater=r||n,this.state=null;var i=this.getInitialState?this.getInitialState():null;s("object"==typeof i&&!Array.isArray(i),"%s.getInitialState(): must return an object or null",e.displayName||"ReactCompositeComponent"),this.state=i});e.prototype=new I,e.prototype.constructor=e,e.prototype.__reactAutoBindPairs=[],y.forEach(u.bind(null,e)),u(e,v),u(e,t),u(e,D),e.getDefaultProps&&(e.defaultProps=e.getDefaultProps()),s(e.prototype.render,"createClass(...): Class specification must implement a `render` method.");for(var r in N)e.prototype[r]||(e.prototype[r]=null);return e}var y=[],N={mixins:"DEFINE_MANY",statics:"DEFINE_MANY",propTypes:"DEFINE_MANY",contextTypes:"DEFINE_MANY",childContextTypes:"DEFINE_MANY",getDefaultProps:"DEFINE_MANY_MERGED",getInitialState:"DEFINE_MANY_MERGED",getChildContext:"DEFINE_MANY_MERGED",render:"DEFINE_ONCE",componentWillMount:"DEFINE_MANY",componentDidMount:"DEFINE_MANY",componentWillReceiveProps:"DEFINE_MANY",shouldComponentUpdate:"DEFINE_ONCE",componentWillUpdate:"DEFINE_MANY",componentDidUpdate:"DEFINE_MANY",componentWillUnmount:"DEFINE_MANY",UNSAFE_componentWillMount:"DEFINE_MANY",UNSAFE_componentWillReceiveProps:"DEFINE_MANY",UNSAFE_componentWillUpdate:"DEFINE_MANY",updateComponent:"OVERRIDE_BASE"},_={getDerivedStateFromProps:"DEFINE_MANY_MERGED"},g={displayName:function(t,e){t.displayName=e},mixins:function(t,e){if(e)for(var n=0;n<e.length;n++)u(t,e[n])},childContextTypes:function(t,e){t.childContextTypes=i({},t.childContextTypes,e)},contextTypes:function(t,e){t.contextTypes=i({},t.contextTypes,e)},getDefaultProps:function(t,e){t.getDefaultProps?t.getDefaultProps=f(t.getDefaultProps,e):t.getDefaultProps=e},propTypes:function(t,e){t.propTypes=i({},t.propTypes,e)},statics:function(t,e){p(t,e)},autobind:function(){}},v={componentDidMount:function(){this.__isMounted=!0}},D={componentWillUnmount:function(){this.__isMounted=!1}},b={replaceState:function(t,e){this.updater.enqueueReplaceState(this,t,e)},isMounted:function(){return!!this.__isMounted}},I=function(){};return i(I.prototype,t.prototype,b),h}var i=n(5),a=n(3),s=n(4),c="mixins";t.exports=r},function(e,n){e.exports=t},function(t,e,n){"use strict";var o=n(1),r=n(0);if(void 0===o)throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");var i=(new o.Component).updater;t.exports=r(o.Component,o.isValidElement,i)},function(t,e,n){"use strict";var o={};t.exports=o},function(t,e,n){"use strict";function o(t,e,n,o,i,a,s,c){if(r(e),!t){var u;if(void 0===e)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var p=[n,o,i,a,s,c],l=0;u=new Error(e.replace(/%s/g,function(){return p[l++]})),u.name="Invariant Violation"}throw u.framesToPop=1,u}}var r=function(t){};t.exports=o},function(t,e,n){"use strict";function o(t){if(null===t||void 0===t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map(function(t){return e[t]}).join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach(function(t){o[t]=t}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,s,c=o(t),u=1;u<arguments.length;u++){n=Object(arguments[u]);for(var p in n)i.call(n,p)&&(c[p]=n[p]);if(r){s=r(n);for(var l=0;l<s.length;l++)a.call(n,s[l])&&(c[s[l]]=n[s[l]])}}return c}}])});;
/* global createReactClass, Promise, wp */

function wpcomGutenbergEmbeds( settings ) {
	function withEmbedEnhancer( EmbedEdit ) {
		// HACK: createReactClass breaks the wp.element abstraction
		var enhancedEmbedEdit = createReactClass( {
			componentDidUpdate: function () {
				if ( this.props.preview && this.props.previewIsFallback ) {
					// TODO: put the caret at the end of the paragraph. There's a @wordpress/dom function for that,
					// but not sure how to hook it in. Perhaps `onSetup`?
					var para = wp.blocks.createBlock( 'core/paragraph', { content: this.props.attributes.url } );
					this.props.onReplace( para );
				}
			},

			render: function () {
				return wp.element.createElement( EmbedEdit, this.props );
			}
		} );

		return wp.data.withSelect( function ( select, ownProps ) {
			var url = ownProps.attributes.url,
				core = wp.data.select( 'core' );
			return {
				preview: url && core.getEmbedPreview( url ),
				previewIsFallback: url && core.isPreviewEmbedFallback( url ),
				fetching: url && core.isRequestingEmbedPreview( url )
			};
		} )( enhancedEmbedEdit );
	}

	if ( 'core/embed' !== settings.name ) {
		return settings;
	}

	settings.edit = withEmbedEnhancer( settings.edit );
	return settings;
}

wp.hooks.addFilter( 'blocks.registerBlockType', 'wpcomGutenbergEmbeds', wpcomGutenbergEmbeds );

/**
 * Unregister the WordPress core embed block variation.
 */
function unregisterWordPressEmbedBlockVariation( settings, name ) {
	'use strict';
	if ( name !== 'core/embed' || ! settings.variations ) {
		return settings;
	}

	settings.variations = settings.variations.filter( function( variation ) {
		return variation.name !== 'wordpress';
	} );

	return settings;
}

wp.hooks.addFilter( 'blocks.registerBlockType', 'unregisterWordPressEmbedBlockVariation', unregisterWordPressEmbedBlockVariation );

/**
 * Transform oEmbed response
 */
function transformOEmbedApiResponse( options, next ) {
	if ( options.path && options.path.indexOf( 'oembed' ) !== -1 ) {
		var url = wp.url.getQueryArg( options.path, 'url' );
		var response = next( options, next );

		/**
		 * Creates an embed response emulating core's fallback link.
		 */
		function createFallbackResponse() {
			var link = document.createElement( 'a' );
			link.href = url;
			link.innerText = url;
			return {
				html: link.outerHTML,
				type: 'rich',
				provider_name: 'Embed'
			};
		}

		return new Promise( function( resolve ) {
			response
				.then( function ( data ) {
					if ( data.html ) {
						/**
						* Removes wrappers from YouTube, Vimeo & Dailymotion block, e.g.
						* <span class="embed-youtube">, <div class="embed-vimeo"> & <div class="embed-dailymotion">
						* and return just the <iframe> child directly to allow wide & full width sizing.
						* See: https://github.com/Automattic/wp-calypso/issues/43047
						*/
						var doc = document.implementation.createHTMLDocument('');
						doc.body.innerHTML = data.html;
						var wrapper = doc.querySelector('[class="embed-youtube"],[class="embed-vimeo"],[class="embed-dailymotion"]');
						data.html = wrapper ? wrapper.innerHTML : data.html;
					}

					resolve( data );
				} )
				.catch( function () {
					resolve( createFallbackResponse() );
				} );
		} );
	} else {
		return next( options, next );
	}
}
wp.apiFetch.use( transformOEmbedApiResponse );;
/* eslint-disable no-var */
/* global jQuery, wp, calypsoifyGutenberg */

jQuery( function( $ ) {
	/**
	 * Checks self and top to determine if we are being loaded in an iframe.
	 * Can't use window.frameElement because we are being embedded from a different origin.
	 */
	function inIframe() {
		try {
			return window.self !== window.top;
		} catch ( e ) {
			return true;
		}
	}

	// Force fullscreen mode for iframed post editor.
	if (
		wp &&
		wp.data &&
		wp.data.select( 'core/edit-post' ) &&
		! wp.data.select( 'core/edit-post' ).isFeatureActive( 'fullscreenMode' )
	) {
		wp.data.dispatch( 'core/edit-post' ).toggleFeature( 'fullscreenMode' );
	}

	// Force fullscreen mode for iframed site editor.
	if (
		wp &&
		wp.data &&
		wp.data.select( 'core/edit-site' ) &&
		! wp.data.select( 'core/edit-site' ).isFeatureActive( 'fullscreenMode' )
	) {
		wp.data.dispatch( 'core/edit-site' ).toggleFeature( 'fullscreenMode' );
	}

	var editPostHeaderInception = setInterval( function() {
		var $closeButton = $( '.edit-post-fullscreen-mode-close__toolbar a' );
		if ( $closeButton.length < 1 ) {
			return;
		}
		clearInterval( editPostHeaderInception );

		if ( calypsoifyGutenberg.closeUrl ) {
			$closeButton.attr( 'href', calypsoifyGutenberg.closeUrl );
			$closeButton.attr( 'target', '_parent' );
		}
	} );

	$( 'body.revision-php a' ).each( function() {
		var href = $( this ).attr( 'href' );
		if ( !! href ) {
			$( this ).attr( 'href', href.replace( '&classic-editor', '' ) );
		}
	} );
} );
;
